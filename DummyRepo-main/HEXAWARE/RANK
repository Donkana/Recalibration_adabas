1NEXT L  RANK

0290 DEFINE DATA LOCAL
0300 **
0310 1 #ALPHA-RANK (N1)
0320 1 #ASSIGNMENT-SUP (A15)
0330 1 REDEFINE #ASSIGNMENT-SUP
0340   2 #ASSIGNMENT-EMP/CAT (A7)
0350   2 #ASSIGNMENT-DATE (A8)
0360 1 #BEGIN-PARS (N5)
0370 1 #CATEGORY (A7)
0380 1 REDEFINE #CATEGORY
0390   2 #BASE (A3)
0400   2 #EQUIP (A3)
0410   2 #POSITION (A1)
0420 1 #COUNT (P7)
0430 1 #DATE-D (D)
0440 1 #CURR-DATE (A6)
0450 1 #CURR-PARS (N5)
0460 1 #DATE-STAMP (A8)
0470 1 #DOMCK (A7)
0480 1 REDEFINE #DOMCK
0490   2 #BASE-CK (A3)
0500   2 #PIL-CK (A1)
0510   2 #EQUIP-CK (A3)
0520 1 #EMP-NAME (A25)                 /* INPUT DOCTOR'S NAME
0530 1 #EMP-NBR (A7)                   /* EMP NUMBER FOR ALL DOCTORS
0540 1 #EMPLOYEE-NBR (A7)              /* EMP NUMBER FOR INPUT DOCTOR
0550 1 REDEFINE #EMPLOYEE-NBR     /* MUKUNDA 3/15
0560   2 FILLER 1X                /* MUKUNDA 3/15
0570   2 #EMPLOYEE-NBR2-7 (A6)    /* MUKUNDA 3/15
0580 1 #EQPT-PSN-DE (A5)
0590 1 REDEFINE #EQPT-PSN-DE
0600   2 #TYP-DE (A1)
0610   2 #EQPT-DE (A3)
0620   2 #POS-DE (A1)
0630 1 #EQUIP-MATCH (N1)
0640 1 #HI-SEN-NUM (A5)                /* HIGHEST SENIORITY NUMBER
0650 1 REDEFINE #HI-SEN-NUM
0660   2 #HI-SEN-NUM-4 (A4)
0670   2 #HI-SEN-FILL (A1)
0680 1 #HI-SEN-NUM-FIELD (A5)
0690 1 #HI-SEN-NUM-RANK (N1)
0700 1 #I (N1)
0710 1 #LAST-NAME (A21)
0720 1 #LOW-SEN-NUM (A5)               /* LOWESET SENIORITY NUMBER
0730 1 REDEFINE #LOW-SEN-NUM
0740   2 #LOW-SEN-NUM-4 (A4)
0750   2 #LOW-SEN-NUM-FILL (A1)
0760 1 #LOW-SEN-NUM-FIELD (A5)
0770 1 #LOW-SEN-NUM-RANK (N1)
0780 1 #MATCH (N1)
0790 1 #NBR-1 (N1)
0800 1 #NEXT-CASE-BEGIN (A6)            /* NEXT CASE PERIOD BEGIN DATE
0810 1 #NEXT-CASE-CENT (A2)                    /* MUKUNDA 10/95
0820 1 #NEXT-CASE-BEGIN-DATE (A7)
0830 1 #NEXT-CASE-BEGIN-PARS (N5)
0840 1 #RANK (P5)                      /* INPUT DOCTOR'S RANK W/IN CATEGORY
0850 1 #RANK-A (A3)
0860 1 #RANK-FIELD (A5)
0870 1 #PRINTER (A4)
0880 1 REDEFINE #PRINTER
0890   2 #PRINTER-N (N4)
0900 1 #SAVE-BASE (A3)
0910 1 #SAVE-SEN-NUM (A5)
0920 1 #SELF (N1)
0930 1 #SEN-INS-CHAR (A1)
0940 1 #SEN-NBR (A5)                   /* SEN NUMBER FOR INPUT DOCTOR
0950 1 REDEFINE #SEN-NBR
0960   2 #SEN-NBR-4 (A4)
0970   2 #SEN-NBR-FILL (A1)
0980 1 #SEN-NBR-FIELD (A5)
0990 1 #SEN-NBR-RANK (N1)
1000 1 #SEN-NUM (A5)                   /* SEN NUMBER FOR ALL DOCTORS
1010 1 REDEFINE #SEN-NUM
1020   2 #SEN-NUM-4 (A4)
1030   2 #SEN-NUM-FILL (A1)
1040 1 #SEN-NUM-FIELD (A5)
1050 1 #SEN-NUM-RANK (N1)
1060 1 #SENDING-PGM (A8)
1070 1 #SUPER (A10)
1080 1 #TIME-STAMP-10 (A10)
1090 1 REDEFINE #TIME-STAMP-10
1100   2 #TIME-STAMP (A8)
1110   2 #TIME-FILL (A2)
1120 1 #TOTAL (P5)
1130 1 PERSONNEL VIEW OF DOCTOR-PERSONNEL-DATA
1140   2 EMPLOYEE-NBR
1150   2 EMPLOYEE-NAME
1160     3 LAST-NAME
1170     3 FIRST-NAME
1180     3 REDEFINE FIRST-NAME
1190       4 #FIRST-INIT (A1)
1200     3 MIDDLE-NAME
1210     3 REDEFINE MIDDLE-NAME
1220       4 #MIDDLE-INIT (A1)
1230   2 RESTRICTION-IND
1240   2 RETIREMENT-DATE
1250   2 SENIORITY-NUM
1260   2 SENIORITY-INSERTION-CHAR
1270   2 TERMINATION-DATE
1280   2 REHIRE-DATE             /* MUKUNDA 12/04
1290   2 REHIRE-POOL-IND         /* MUKUNDA 12/04
1300 1 ASSIGNMENT VIEW OF DOCTOR-ASSIGNMENT-DATA
1310   2 BASE-CODE
1320   2 BEGIN-DATE   /* (YYMMDD)
1330   2 EMPLOYEE-NBR
1340   2 END-DATE     /* (YYMMDD)
1350   2 EQUIP-ADMIN-TYPE
1360   2 POSITION
1370   2 YEAR-PREFIX
1380 1 CASE-PERIOD-VIEW VIEW OF DOCTOR-CASE-PERIOD-DATES
1390   2 NEXT-BEGIN-DATE
1400   2 CASE-PERIOD-TYPE-IND
1410 1 EQUIP-TYPE VIEW OF DOCTOR-EQUIPMENT-TYPE-FILE
1420   2 RECTYPE-EQUIP-POS
1430 1 DOMICILE-INFO-VIEW2 VIEW OF DOCTOR-DOMICILE-INFORMATION
1440   2 BASE-CODE
1450   2 BASE-TYPE
1460   2 EQUIP/ADMIN-TYPE
1470   2 EQUIP/ADMIN-BEGIN-DATE
1480   2 EQUIP/ADMIN-END-DATE
1490 1 DOMICILE-INFO-VIEW1 VIEW OF DOCTOR-DOMICILE-INFORMATION
1500   2 BASE-TYPE-EQUIP
1510   2 REDEFINE BASE-TYPE-EQUIP
1520     3 #SD-BASE (A3)
1530     3 #SD-TYPE (A1)
1540     3 #SD-FILL3 (A3)
1550 END-DEFINE
1560 ************************************************************************
1570 FORMAT (01) IP=OFF PS=06 LS=60
1580 FORMAT PS=90
1590 SET KEY PF1 PF2
1600 INPUT #EMPLOYEE-NBR #SENDING-PGM (IP=OFF)
1610 ************************************************************************
1620 **
1630 FIND (1) CASE-PERIOD-VIEW WITH CASE-PERIOD-TYPE-IND = 'P' /* GET NEXT CASE
1640   ASSIGN #NEXT-CASE-BEGIN-PARS = NEXT-BEGIN-DATE (1630)
1650   #DATE-D := D'2024-12-30' + NEXT-BEGIN-DATE
1660   MOVE EDITED #DATE-D(EM=DDLLLYY) TO #NEXT-CASE-BEGIN-DATE
1670 END-FIND /* (1630)
1680 **
1690 IF #EMPLOYEE-NBR = MASK (......' ')
1700   COMPRESS '0' #EMPLOYEE-NBR INTO #EMPLOYEE-NBR LEAVING NO
1710 END-IF /* (1690)
1720 IF #EMPLOYEE-NBR NE MASK (9999999)
1730   REINPUT 'INVALID EMPLOYEE NUMBER' MARK 1 SOUND ALARM
1740 END-IF /* (1690)
1750 **
1760 #CURR-PARS := *DATX - D'2024-12-30'
1770 ************************************************************************
1780 **  FIND CURRENT CATEGORY FOR INPUT EMPLOYEE NUMBER.
1790 ************************************************************************
1800 #ASSIGNMENT-EMP/CAT := #EMPLOYEE-NBR
1810 MOVE EDITED *DATX (EM=YYYYMMDD) TO #ASSIGNMENT-DATE
1820 READ (1) ASSIGNMENT BY EMPNBR-YEAR-PREFIX-END-DATE
1830   STARTING FROM #ASSIGNMENT-SUP
1840   ADD 1 TO #COUNT
1850   IF EMPLOYEE-NBR (1820) NE #EMPLOYEE-NBR
1860     ESCAPE BOTTOM
1870   END-IF /* (1850)
1880 **
1890   MOVE EDITED BEGIN-DATE TO #DATE-D (EM=YYMMDD)
1900   #BEGIN-PARS := #DATE-D - D'2024-12-30'
1910 **
1920   IF #BEGIN-PARS GT #CURR-PARS
1930     ESCAPE BOTTOM
1940   END-IF /* (2400)
1950   ASSIGN #BASE = BASE-CODE (1820)
1960   ASSIGN #SAVE-BASE = BASE-CODE (1820)
1970   ASSIGN #EQUIP = EQUIP-ADMIN-TYPE (1820)
1980   ASSIGN #POSITION = POSITION (1820)
1990 END-READ /* (1820)
2000 **
2010 IF #BASE = ' '
2020   WRITE //// 10T 'NO ASSIGNMENT FOUND, HIT ENTER FOR PREVIOUS MENU'
2030   IF #SENDING-PGM = 'DOCTORMCA'    /* RETURN TO PREVIOUS FUNCTION
2040     FETCH 'DOCTORMCA'
2050   ELSE
2060     IF #SENDING-PGM = 'MUKUNDAM'
2070       FETCH 'MUKUNDAM'
2080     END-IF /* (2060)
2090   END-IF /* (2030)
2100 END-IF /* (2010)
2110 ************************************************************************
2120 **    GET SENIORITY NUMBER OF INPUT EMPLOYEE NUMBER.
2130 ************************************************************************
2140 FIND PERSONNEL WITH EMPLOYEE-NBR = #EMPLOYEE-NBR
2150   IF RESTRICTION-IND (2140) = 'R' AND #EMPLOYEE-NBR2-7 NE *USER
2160     REINPUT 'INFORMATION NOT AVAILABLE'
2170       MARK 1 SOUND ALARM
2180   END-IF /* (2150)
2190   ADD 1 TO #COUNT
2200   COMPRESS LAST-NAME ',' INTO #EMP-NAME LEAVING NO
2210   COMPRESS #EMP-NAME #FIRST-INIT #MIDDLE-INIT INTO #EMP-NAME
2220   ASSIGN #SEN-NBR = SENIORITY-NUM (2140)  /* INPUT SENIORITY NUMBER
2230 END-FIND /* (2140)
2240 IF *COUNTER (2140) = 0
2250   REINPUT 'NO PERSONNEL RECORD FOR EMPLOYEE:1:',#EMPLOYEE-NBR
2260 END-IF /* (2240)
2270 **
2280 INPUT USING MAP 'RANKMAP1'
2290 IF *PF-KEY = 'PF1'
2300   FETCH 'MAIN'
2310 END-IF /* (2290)
2320 IF *PF-KEY = 'PF2'      /* FUNCTION CAN BE ACTIVATED BY EITHER PROGRAM.
2330   IF #SENDING-PGM = 'DOCTORMCA'
2340     FETCH 'DOCTORMCA'
2350   ELSE
2360     FETCH 'MUKUNDAM'
2370   END-IF /* (2330)
2380 END-IF
2390 **
2400 ASSIGN #PIL-CK = 'P'
2410 ASSIGN #TYP-DE = 'P'
2420   IF #BASE = ' '                                 /* BASE VALID?
2430     REINPUT 'BASE-CODE MUST BE ENTERED'
2440       MARK *#BASE SOUND ALARM
2450   END-IF /* (2420)
2460 **
2470   ASSIGN #BASE-CK = #BASE
2480   HISTOGRAM DOMICILE-INFO-VIEW1
2490     FOR BASE-TYPE-EQUIP STARTING FROM #DOMCK
2500       ESCAPE BOTTOM
2510   END-HISTOGRAM /* (2480)                          /* CLOSE HIST
2520   IF #SD-BASE NE #BASE OR #SD-TYPE NE #PIL-CK
2530     REINPUT 'INVALID BASE' MARK *#BASE SOUND ALARM
2540   END-IF /* (2520)
2550 **
2560   #EQUIP-CK := #EQUIP
2570   FIND DOMICILE-INFO-VIEW2 WITH BASE-TYPE-EQUIP = #DOMCK
2580     IF EQUIP/ADMIN-BEGIN-DATE GT #NEXT-CASE-BEGIN-PARS OR
2590         (EQUIP/ADMIN-END-DATE LT #NEXT-CASE-BEGIN-PARS AND
2600         EQUIP/ADMIN-END-DATE NE 0)
2610       REINPUT 'CATEGORY NOT VALID FOR NEXT CASE PERIOD'
2620         MARK *#BASE SOUND ALARM
2630     END-IF /* (2580)
2640   END-FIND /* (2570)
2650 **
2660   IF *NUMBER(2570) = 0                    /* VALID BASE
2670     REINPUT 'INVALID EQUIP FOR BASE' MARK *#EQUIP SOUND ALARM
2680   END-IF /* (2660)
2690 *
2700   IF #EQUIP = ' '                       /* VALID EQUIPMENT
2710     REINPUT 'EQUIPMENT MUST BE ENTERED'
2720       MARK *#EQUIP SOUND ALARM
2730   END-IF /* (2700)
2740 *
2750   IF #POSITION = ' '                             /* VALID POSITION
2760     REINPUT 'POSITION MUST BE ENTERED' MARK *#POSITION SOUND ALARM
2770   END-IF /* (2750)
2780 **
2790   ASSIGN #EQPT-DE = #EQUIP
2800   ASSIGN #POS-DE = #POSITION
2810   FIND NUMBER EQUIP-TYPE WITH RECTYPE-EQUIP-POS = #EQPT-PSN-DE
2820   IF *NUMBER (2810) = 0
2830     REINPUT 'INVALID POSITION FOR THIS EQUIPMENT'
2840       MARK *#POSITION SOUND ALARM
2850   END-IF /* (2820)
2860 ************************************************************************
2870 **  READ ALL DOCTORS IN CURRENT CATEGORY
2880 ************************************************************************
2890   #ASSIGNMENT-EMP/CAT := #CATEGORY
2900   #DATE-D := D'2024-12-30' + #NEXT-CASE-BEGIN-PARS
2910   MOVE EDITED #DATE-D (EM=YYYYMMDD) TO #ASSIGNMENT-DATE
2920 **
2930   READ ASSIGNMENT WITH BASE-EQUIP-POS-YEAR-PREFIX-END    /* MUKUNDA 10/95
2940     = #ASSIGNMENT-SUP                                    /* MUKUNDA 10/95
2950     ADD 1 TO #COUNT
2960     IF #COUNT > 1000
2970       RESET #COUNT
2980       SET CONTROL 'N'
2990       WRITE 15X 'PLEASE WAIT....RELATIVE RANKING IN PROCESS'
3000     END-IF /* (2960)
3010 **
3020     IF BASE-CODE (2930) NE #BASE
3030       OR EQUIP-ADMIN-TYPE (2930) NE #EQUIP
3040       OR POSITION (2930) NE #POSITION
3050       ESCAPE BOTTOM
3060     END-IF /* (3020)
3070 **
3080     RESET #MATCH #SEN-NUM #SEN-NUM-FIELD
3090     MOVE EDITED BEGIN-DATE TO #DATE-D (EM=YYMMDD)
3100     #BEGIN-PARS := #DATE-D - D'2024-12-30'
3110 **
3120     IF #BEGIN-PARS GT #NEXT-CASE-BEGIN-PARS  /* ONLY INTERESTED IF
3130       ESCAPE TOP                       /* NEXT-CASE-PERIOD-BEGIN-DATE
3140     END-IF /* (3120)
3150     ADD 1 TO #TOTAL
3160 ************************************************************************
3170 ** READ PERSONNEL FILE TO GET SENIORITY NUMBER
3180 ************************************************************************
3190     FIND PERSONNEL WITH EMPLOYEE-NBR = EMPLOYEE-NBR (2930)
3200       RESET #SEN-NUM #SEN-NUM-FIELD #SEN-NUM-RANK
3210       ADD 1 TO #COUNT
3220       IF REHIRE-DATE NE 0 OR REHIRE-POOL-IND = 'Y'     /* MUKUNDA 12/04
3230         ESCAPE TOP                                     /* MUKUNDA 12/04
3240       END-IF /* (3220)                                 /* MUKUNDA 12/04
3250       ASSIGN #SEN-NUM = SENIORITY-NUM (3190)
3260 **
3270       IF #LOW-SEN-NUM = ' '
3280         ASSIGN #LOW-SEN-NUM = #SEN-NUM
3290       END-IF /* (3270)
3300 **
3310       IF #HI-SEN-NUM = ' '
3320         ASSIGN #HI-SEN-NUM = #SEN-NUM
3330       END-IF /* (3270)
3340 **
3350       IF #SEN-NBR = MASK (9999A)
3360         COMPRESS '0' #SEN-NBR-4 INTO #SEN-NBR-FIELD
3370           LEAVING NO
3380         ASSIGN #RANK-FIELD = #SEN-NBR
3390         PERFORM RANK
3400         ASSIGN #SEN-NBR-RANK = #ALPHA-RANK
3410       ELSE
3420         ASSIGN #SEN-NBR-FIELD = #SEN-NBR
3430       END-IF /* (3350)
3440 **
3450       IF #SEN-NUM = MASK (9999A)
3460         COMPRESS '0' #SEN-NUM-4 INTO #SEN-NUM-FIELD
3470           LEAVING NO
3480         ASSIGN #RANK-FIELD = #SEN-NUM
3490         PERFORM RANK
3500         ASSIGN #SEN-NUM-RANK = #ALPHA-RANK
3510       ELSE
3520         ASSIGN #SEN-NUM-FIELD = #SEN-NUM
3530       END-IF /* (3450)
3540 **
3550       IF #LOW-SEN-NUM = MASK (9999A)
3560         COMPRESS '0' #LOW-SEN-NUM-4 INTO #LOW-SEN-NUM-FIELD
3570           LEAVING NO
3580         ASSIGN #RANK-FIELD = #LOW-SEN-NUM
3590         PERFORM RANK
3600         ASSIGN #LOW-SEN-NUM-RANK = #ALPHA-RANK
3610       ELSE
3620         ASSIGN #LOW-SEN-NUM-FIELD = #LOW-SEN-NUM
3630       END-IF /* (3550)
3640 **
3650       IF #HI-SEN-NUM = MASK (9999A)
3660         COMPRESS '0' #HI-SEN-NUM-4 INTO #HI-SEN-NUM-FIELD
3670           LEAVING NO
3680         ASSIGN #RANK-FIELD = #HI-SEN-NUM
3690         PERFORM RANK
3700         ASSIGN #HI-SEN-NUM-RANK = #ALPHA-RANK
3710       ELSE
3720         ASSIGN #HI-SEN-NUM-FIELD = #HI-SEN-NUM
3730       END-IF /* (3650)
3740 **
3750       IF #SEN-NUM-FIELD = #LOW-SEN-NUM-FIELD
3760         IF #SEN-NUM-RANK LT #LOW-SEN-NUM-RANK AND
3770             #LOW-SEN-NUM-RANK NE 0
3780           ASSIGN #LOW-SEN-NUM = #SEN-NUM
3790           ASSIGN #LOW-SEN-NUM-FIELD = #SEN-NUM
3800         END-IF /* (3760)
3810       END-IF /* (3750)
3820       IF #SEN-NUM-FIELD LT #LOW-SEN-NUM-FIELD
3830         ASSIGN #LOW-SEN-NUM-FIELD = #SEN-NUM
3840         ASSIGN #LOW-SEN-NUM = #SEN-NUM
3850       END-IF /* (3820)
3860       IF #SEN-NUM-FIELD = #HI-SEN-NUM-FIELD
3870         IF #SEN-NUM-RANK GT #HI-SEN-NUM-RANK
3880           ASSIGN #HI-SEN-NUM-FIELD = #SEN-NUM
3890           ASSIGN #HI-SEN-NUM = #SEN-NUM
3900         END-IF /* (3870)
3910       END-IF /* (3860)
3920       IF #SEN-NUM-FIELD GT #HI-SEN-NUM-FIELD
3930         ASSIGN #HI-SEN-NUM-FIELD = #SEN-NUM
3940         ASSIGN #HI-SEN-NUM = #SEN-NUM
3950       END-IF /* (3920)
3960       IF #SEN-NUM-FIELD = #SEN-NBR-FIELD  /* INPUT NBR SAME AS READ
3970         IF #SEN-NUM-RANK GT #SEN-NBR-RANK /* ALPHA > INPUT, COUNT
3980           ASSIGN #NBR-1 = 1
3990           ESCAPE BOTTOM
4000         END-IF /* (3970)
4010         IF #SEN-NUM-RANK = #SEN-NBR-RANK  /* FOUND SELF IN CATEGORY
4020           ASSIGN #SELF = 1
4030           COMPUTE #RANK = #RANK + 1      /* ADD SELF TO RANKING
4040           RESET #NBR-1
4050           ESCAPE BOTTOM
4060         ELSE                             /* FOUND < INPUT NBR, COUNT.
4070           RESET #NBR-1
4080           ASSIGN #MATCH = 1
4090           COMPUTE #RANK = #RANK + 1
4100           ESCAPE BOTTOM
4110         END-IF /* (4010)
4120       END-IF /* (3960)
4130       IF #SEN-NUM-FIELD GT #SEN-NBR-FIELD  /* FOUND > INPUT, DON'T COUNT
4140         ASSIGN #NBR-1 = 1
4150         ESCAPE BOTTOM
4160       ELSE
4170         RESET #NBR-1
4180         ASSIGN #MATCH = 1
4190         COMPUTE #RANK = #RANK + 1
4200       END-IF /* (4130)
4210     END-FIND /* (3190)
4220 **
4230     IF #MATCH NE 1
4240       ESCAPE TOP                                /* CONTINUE READING FILE
4250     END-IF /* (4230)
4260   END-READ /* (2930) - ASSIGNMENT FILE
4270 **
4280   IF #SELF NE 1                    /* EVEN THOGH DIDN'T FIND SELF IN
4290     COMPUTE #RANK = #RANK + 1     /* CATEGORY, NEED TO COUNT IN RANK.
4300   END-IF /* (4280)
4310 **
4320   ASSIGN #DATE-STAMP = *DATE        /* REQUIRED FOR DISPLAY TO DOCTOR.
4330   ASSIGN #TIME-STAMP-10 = *TIME
4340 **
4350   IF #NBR-1 = 1 AND #RANK = 0
4360     ASSIGN #RANK = 1
4370   END-IF /* (4350)
4380 **
4390   IF #SEN-NBR-FIELD GT #HI-SEN-NUM-FIELD  /* IF INPUT EMP NBR > HIGHEST
4400     ASSIGN #RANK-A = 'N/A'                /* SENIORITY NBR FOUND,
4410     INPUT USING MAP 'RANKMAP3'            /* PLACE N/A IN RANK FIELD.
4420     IF *PF-KEY = 'PF1' OR = 'PF2'
4430       IF *PF-KEY = 'PF1'
4440         FETCH 'MAIN'
4450       END-IF /* (4430)
4460       IF *PF-KEY = 'PF2'
4470         FETCH 'RANK' #EMPLOYEE-NBR #SENDING-PGM
4480       END-IF /* (4460)
4490     ELSE
4500       FETCH 'RANK' #EMPLOYEE-NBR #SENDING-PGM
4510     END-IF /* (4420)
4520   ELSE                                     /* NORMAL RANK DISPLAY.
4530     INPUT USING MAP 'RANKMAP2'
4540     IF *PF-KEY = 'PF1' OR = 'PF2'
4550       IF *PF-KEY = 'PF1'
4560         FETCH 'MAIN'
4570       END-IF /* (4550)
4580       IF *PF-KEY = 'PF2'
4590         FETCH 'RANK' #EMPLOYEE-NBR #SENDING-PGM
4600       END-IF /* (4580)
4610     ELSE
4620       FETCH 'RANK' #EMPLOYEE-NBR #SENDING-PGM
4630     END-IF /* (4540)
4640   END-IF /* (4390)
4650 ************************************************************************
4660 ** SUBROUTINE TO DETERMINE SENIORITY NUMBER MASK
4670 ************************************************************************
4680 DEFINE SUBROUTINE RANK                 /* NECESSARY DUE TO PERIODIC
4690   IF #RANK-FIELD = MASK (....'A')      /* RESEQUENCING OF SENIORITY NBRS
4700     ASSIGN #ALPHA-RANK = 1             /* ASSIGN A RANK TO ALPHA SINCE
4710   END-IF /* (4690)                     /* NUMERIC PORTION OF SENIORITY
4720   IF #RANK-FIELD = MASK (....'B')      /* NBR COULD BE THE SAME.
4730     ASSIGN #ALPHA-RANK = 2
4740   END-IF /* (4720)
4750   IF #RANK-FIELD = MASK (....'C')
4760     ASSIGN #ALPHA-RANK = 3
4770   END-IF /* (4750)
4780 END-SUBROUTINE
4790 END
***** End of List *****
