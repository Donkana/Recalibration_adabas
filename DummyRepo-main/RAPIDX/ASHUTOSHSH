1NEXT L  ASHUTOSHSH

0120 DEFINE DATA LOCAL
0130 1 PROCESS-CONTROL VIEW OF DOCTOR-VACANCY-PROCESS-CONTROL
0140   2 CLOSE-DATE
0150   2 POSTING-OF-CASE-DATE
0160   2 CLOSE-TIME
0170   2 REDEFINE CLOSE-TIME
0180     3 CLOSE-TIME-A (A4)
0190   2 FIRST-AE-CONVERSION-DATE
0200   2 LAST-AE-CONVERSION-DATE
0210   2 FIRST-CANCELLATION-DATE
0220   2 LAST-CANCELLATION-DATE
0230   2 FINAL-RUN-INDICATOR
0240 1 POSTING VIEW OF DOCTOR-VACANCY-POSTING
0250   2 CLOSE-DATE
0260   2 POSTING-OF-CASE-DATE
0270   2 POSTING-LOCK-IND
0280   2 C*TEXT
0290   2 TEXT1 (1:40)
0300   2 C*VAC-DATA
0310   2 VAC-CAT (1:100)
0320   2 VAC-CNT (1:100)
0330   2 HIGH-SEN(1:100)
0340   2 LOW-SEN (1:100)
0350   2 VAC-REASON (1:100)
0360   2 C*SURPLUS-DATA
0370   2 SUR-CAT (1:100)
0380   2 SUR-CNT (1:100)
0390 **
0400 1 #I (I4)
0410 1 #A (I4)
0420 1 #V (I4)
0430 1 #M (I4)
0440 1 #T (I4)
0390 **
0400 1 #I (I4)
0410 1 #A (I4)
0420 1 #V (I4)
0430 1 #M (I4)
0440 1 #T (I4)
0450 **
0460 1 #TOT-VAC (N5)
0470 1 #CAPT-VAC (N4)         /* INCREASE FROM N3 - MUKUNDA 5/17
0480 1 #F/O-VAC (N4)          /* INCREASE FROM N3 - MUKUNDA 5/17
0490 1 #TOT-SUR (N4)          /* INCREASE FROM N3 - MUKUNDA 5/20
0500 1 #CAPT-SUR (N4)         /* INCREASE FROM N3 - MUKUNDA 5/20
0510 1 #F/O-SUR (N4)
0520 **
0530 1 #DATE-D (D)
0540 1 #CONV-DATE (D) CONST <D'2024-12-30'>
0550 1 #CLOSE-DAY(A9)
0560 1 #CLOSE-PARS (N5)
0570 1 #CLOSE-DATE-DISPLAY (A7)
0580 1 #CONV-BEGIN (A12)
0590 1 #CONV-END (A12)
0600 1 #CLOSE-DATE (A12)
0610 1 #POST-DATE (A7)
0620 1 #CLOSE-TIME (A4)
0630 1 #PREV-BASE (A3)
0640 **
0650 1 #CATEGORY-S1 (A10/9)
0660 1 #VACANCIES-S1 (A3/9)
0670 1 #HIGH-SENIOR-S1 (A5/9)
0680 1 #LOW-SENIOR-S1 (A5/9)
0690 1 #REASON-S1 (A18/9)
0700 1 #CATEGORY-S2 (A10/13)
0710 1 #VACANCIES-S2 (A3/13)
0720 1 #HIGH-SENIOR-S2 (A5/13)
0730 1 #LOW-SENIOR-S2 (A5/13)
0740 1 #REASON-S2 (A18/13)
0750 1 #CATEGORY-S3 (A10/39)
0760 1 #NBR-SURPLUSES-S3 (A3/39)
0770 1 #TEXT (A65/20)
0780 1 #TOTALS (A75)
0790 1 REDEFINE #TOTALS
0800   2 #FIXED (A24)
0810   2 FILLER 1X
0820   2 #NBR-CAPT (A4)
0830   2 FILLER 2X
0840   2 #F/O (A4)
0850   2 FILLER 1X
0860   2 #NBR-F/O (A4)
0870   2 FILLER 2X
0880   2 #S/O (A6)
0890   2 FILLER 1X
0900   2 #NBR-S/O (A4)
0910   2 FILLER 2X
0920   2 #TOTAL (A13)
0930   2 FILLER 1X
0940   2 #V-TOTAL (A5)
0950 1 #TOT-TYPE (A1)
0960 1 #FIRST (A1)
0970 /*--- #BEG #END AND #ADD-1 USED FOR LINE SKIP IF BASE CHG IN SURPLUSES
0980 1 #BEG (I4/15) INIT (V) <1,4,7,10,13,16,19,22,25,28,31,34,37,40,43>
0990 1 #END (I4/15) INIT (V) <3,6,9,12,15,18,21,24,27,30,33,36,39,42,45>
1000 1 #ADD-1 (A1)
1010 1 #TODAY (N5)
1020 1 #FOUND (A1)
1030 1 #CLOSE-YYYYMMDD (A8)
1040 1 #R-CODE (A1)
1050 END-DEFINE
1060 **
1070 /*-------------------------------------------------------------
1080 /* ALLOW SAME PROGRAM TO BE ACCESSED FROM RAPIDX AND HEXAWARE
1090 /*-------------------------------------------------------------
1100 IF *LIBRARY-ID = 'RAPIDX' OR = 'CSSPRGPQ'
1110   INPUT #CLOSE-PARS #CLOSE-DATE-DISPLAY
1120 END-IF
1130 * IF *DATA GT 0
1140 *   INPUT #CLOSE-PARS #CLOSE-DATE-DISPLAY
1150 * ELSE
1160 *   SET KEY  PF1 ='MAIN'  PF2 ='RAV'
1170 *   INPUT USING MAP 'ASHUTOSHSHMPA'
1180 *   IF #CLOSE-DATE-DISPLAY = ' '
1190 *     REINPUT 'PLEASE ENTER CLOSE DATE'
1200 *       MARK *#CLOSE-DATE-DISPLAY ALARM
1210 *   END-IF
1220 *   CALLNAT 'UT018N' #CLOSE-DATE-DISPLAY #CLOSE-PARS
1230 *     #CLOSE-YYYYMMDD #R-CODE
1240 *   IF #R-CODE NE ' '
1250 *     REINPUT 'INVALID CLOSE DATE'
1260 *       MARK *#CLOSE-DATE-DISPLAY ALARM
1270 *   END-IF
1280 *   MOVE EDITED #CLOSE-DATE-DISPLAY TO #DATE-D (EM=DDLLLYY)
1290 *   #CLOSE-PARS := #DATE-D - #CONV-DATE
1300 * END-IF
1310 **END-IF
1320 **
1330 IF *LIBRARY-ID = 'HEXAWARE'
1340   #TODAY := *DATX - #CONV-DATE
1350   READ (1) POSTING DESCENDING BY CLOSE-DATE
1360       STARTING FROM 99999
1370     IF POSTING-LOCK-IND = 'Y'
1380       WRITE ////////
1390         15T 'NO CURRENT POSTING INFORMATION AVAILABLE AT THIS TIME'
1400         / 20T 'HIT ENTER TO RETURN TO PREVIOUS MENU'
1410       FETCH 'MUKUNDAM'
1420     END-IF
1430     FIND PROCESS-CONTROL WITH CLOSE-DATE EQ POSTING.CLOSE-DATE
1440       IF FINAL-RUN-INDICATOR = 'F'
1450         WRITE ////////
1460           15T 'NO CURRENT POSTING INFORMATION AVAILABLE AT THIS TIME'
1470           / 20T 'HIT ENTER TO RETURN TO PREVIOUS MENU'
1480         FETCH 'MUKUNDAM'
1490       END-IF
1500     END-FIND
1510     IF *NUMBER (1430) = 0
1520       WRITE ////////
1530         15T 'NO CURRENT POSTING INFORMATION AVAILABLE AT THIS TIME'
1540         / 20T 'HIT ENTER TO RETURN TO PREVIOUS MENU'
1550       FETCH 'MUKUNDAM'
1560     END-IF
1570     #CLOSE-PARS := POSTING.CLOSE-DATE
1580     #DATE-D := #CLOSE-PARS + #CONV-DATE
1590     MOVE EDITED #DATE-D (EM=DDLLLYY) TO #CLOSE-DATE-DISPLAY
1600   END-READ
1610   IF *COUNTER (1350) = 0
1620     WRITE ////////
1630       15T 'NO CURRENT POSTING INFORMATION AVAILABLE AT THIS TIME'
1640       / 20T 'HIT ENTER TO RETURN TO PREVIOUS MENU'
1650     FETCH 'MUKUNDAM'
1660   END-IF
1670 END-IF
1680 **
1690 FIND PROCESS-CONTROL WITH CLOSE-DATE EQ #CLOSE-PARS
1700   IF FIRST-AE-CONVERSION-DATE GT 0
1710     #DATE-D := FIRST-AE-CONVERSION-DATE + #CONV-DATE
1720     MOVE EDITED #DATE-D (EM=LLL' 'DD', 'YYYY) TO #CONV-BEGIN
1730     #DATE-D := LAST-AE-CONVERSION-DATE + #CONV-DATE
1740     MOVE EDITED #DATE-D (EM=LLL' 'DD', 'YYYY) TO #CONV-END
1750   ELSE
1760     #DATE-D := FIRST-CANCELLATION-DATE + #CONV-DATE
1770     MOVE EDITED #DATE-D (EM=LLL' 'DD', 'YYYY) TO #CONV-BEGIN
1780     #DATE-D := LAST-CANCELLATION-DATE + #CONV-DATE
1790     MOVE EDITED #DATE-D (EM=LLL' 'DD', 'YYYY) TO #CONV-END
1800   END-IF /*(1700)
1810   #DATE-D := CLOSE-DATE + #CONV-DATE
1820   MOVE EDITED #DATE-D (EM=N(9)) TO #CLOSE-DAY
1830   MOVE EDITED #DATE-D (EM=LLL' 'DD', 'YYYY) TO #CLOSE-DATE
1840   #DATE-D := POSTING-OF-CASE-DATE + #CONV-DATE
1850   MOVE EDITED #DATE-D (EM=DDLLLYY) TO #POST-DATE
1860   MOVE EDITED CLOSE-TIME (EM=9999) TO #CLOSE-TIME
1870 END-FIND
1880 **
1890 **
1900 FIND POSTING WITH CLOSE-DATE EQ #CLOSE-PARS
1910   PERFORM GET-CNTS
1920   #V := C*VAC-DATA
1930   IF #V GT 0
1940     MOVE SUBSTRING (VAC-CAT(1),1,3) TO #PREV-BASE
1950     FOR #I = 1 TO #V
1960       #M := #M + 1
1970       #T := #T + 1
1980       /************************************************/
1990       /*          SKIP LINE IF NEW BASE               */
2000       /************************************************/
2010       IF SUBSTRING (VAC-CAT(#I),1,3) NE #PREV-BASE
2020         #M := #M + 1
2030         MOVE SUBSTRING (VAC-CAT(#I),1,3) TO #PREV-BASE
2040       END-IF
2050 **
2060       IF #FIRST NE 'Y' AND #M GE 10
2070           OR
2080           #FIRST = 'Y' AND #M GE 14
2090         PERFORM SHOW-VACANCIES
2100       END-IF
2110       IF #FIRST NE 'Y'
2120         #CATEGORY-S1 (#M) := VAC-CAT (#I)
2130         IF SUBSTRING (#CATEGORY-S1 (#M),7,1) = 'A'
2140           MOVE 'CAPT' TO SUBSTRING (#CATEGORY-S1(#M),7,4)
2150         ELSE
2160           MOVE 'F/O' TO SUBSTRING (#CATEGORY-S1(#M),7,3)
2170         END-IF
2180         MOVE RIGHT JUSTIFIED VAC-CNT (#I) TO #VACANCIES-S1 (#M)
2190         #HIGH-SENIOR-S1 (#M) := HIGH-SEN (#I)
2200         #LOW-SENIOR-S1 (#M) := LOW-SEN (#I)
2210         #REASON-S1 (#M) := VAC-REASON (#I)
2220       ELSE
2230         #CATEGORY-S2 (#M) := VAC-CAT (#I)
2240         IF SUBSTRING (#CATEGORY-S2 (#M),7,1) = 'A'
2250           MOVE 'CAPT' TO SUBSTRING (#CATEGORY-S2(#M),7,4)
2260         ELSE
2270           MOVE 'F/O' TO SUBSTRING (#CATEGORY-S2(#M),7,3)
2280         END-IF
2290         MOVE RIGHT JUSTIFIED VAC-CNT(#I) TO #VACANCIES-S2 (#M)
2300         #HIGH-SENIOR-S2 (#M) := HIGH-SEN(#I)
2310         #LOW-SENIOR-S2 (#M) := LOW-SEN(#I)
2320         #REASON-S2 (#M) := VAC-REASON (#I)
2330       END-IF
2340     END-FOR
2350     IF #M GT 0
2360       PERFORM SHOW-VACANCIES
2370     END-IF
2380   ELSE
2390     INPUT USING MAP 'RAVDMAP6'   /*  NO VACANCIES FOUND
2400   END-IF
2410 **
2420 ** SURPLUSES
2430 **
2440 /*----------------------------------------------------------------
2450 /* #M = THE INDEX OF CATEGORIES WITH SURPLUSES ON THE MAP. #M'S MAX
2460 /* IS 39 - 13 ROWS WITH 3 CATEGORIES PER ROW.
2470 /* IN ORDER TO SKIP A LINE BETWEEN BASES THE #BEG ARRAY IS AN ARRAY
2480 /* OF THE INDICES OF THE 1ST CATEGORY IN A ROW AND #END IS AN ARRAY
2490 /* OF THE INDICES OF THE LAST CATEGORY IN A ROW.
2500 /*-----------------------------------------------------------------
2510   RESET #M #T #FOUND #ADD-1
2520   #V := C*SURPLUS-DATA
2530   IF #V GT 0
2540     MOVE SUBSTRING (SUR-CAT(1),1,3) TO #PREV-BASE
2550     FOR #I = 1 TO #V
2560       #T := #T + 1
2570       /*------------------------------------------------------
2580       /* THIS LOGIC IS INCASE OF A BASE CHANGE AND #M IS SET
2590       /* THE END OF THE LINE IF THE BEGINNING OF THE LINE IS
2600       /* IS SET 2 LINES DOWN WE WILL SKIP 2 LINES WHEN THERE IS
2610       /* A BASE CHANGE.
2620       /*------------------------------------------------------
2630       IF #M GT 0
2640         RESET #FOUND #ADD-1
2650         FOR #A = 1 TO 13
2660           IF #M = #END (#A)
2670             #ADD-1 := 'Y'
2680             #FOUND := 'Y'
2690             ESCAPE BOTTOM
2700           END-IF
2710         END-FOR
2720         IF #FOUND NE 'Y'
2730           RESET #ADD-1
2740         END-IF
2750         RESET #FOUND
2760       END-IF
2770       #M := #M + 1
2780       /*----------------- SKIP LINE IF NEW BASE
2790       IF SUBSTRING (SUR-CAT(#I),1,3) NE #PREV-BASE
2800         MOVE SUBSTRING (SUR-CAT(#I),1,3) TO #PREV-BASE
2810         IF #M GE 38      /* GO TO NEXT SCREEN BECAUSE CAN'T SKIP
2820           #M := 39       /* LINE AND ADD CATEGORY ON THIS SCREEN.
2830         ELSE
2840           FOR #A = 1 TO 13
2850             IF #M GE #BEG (#A) AND #M LE #END (#A)
2860               IF #ADD-1 = 'Y'
2870                 #M := #BEG (#A + 1)
2880               ELSE
2890                 #M := #BEG (#A + 2)
2900               END-IF
2910               ESCAPE BOTTOM
2920             END-IF
2930           END-FOR
2940         END-IF /* (2810)
2950       END-IF /* (2790)
2960       /*---------------- SKIP LINE IF NEW BASE
2970       IF #M GE 39
2980         IF #T = #V
2990           #TOT-TYPE := 'S'
3000           PERFORM TOTAL-LINE
3010         END-IF
3020         INPUT USING MAP 'RAVDMAP3'
3030         RESET #CATEGORY-S3 (*) #NBR-SURPLUSES-S3 (*)
3040         #M := 1
3050       END-IF /*(2970)
3060       #CATEGORY-S3 (#M) := SUR-CAT (#I)
3070       IF SUBSTRING (SUR-CAT (#I),7,1) = 'A'
3080         MOVE 'CAPT' TO SUBSTRING (#CATEGORY-S3(#M),7,4)
3090       END-IF
3100       IF SUBSTRING (SUR-CAT (#I),7,1) = 'B'
3110         MOVE 'F/O' TO SUBSTRING (#CATEGORY-S3(#M),7,3)
3120       END-IF
3130       IF SUBSTRING (SUR-CAT(#I),7,1) = 'C'
3140         MOVE 'S/O' TO SUBSTRING (#CATEGORY-S3(#M),7,3)
3150       END-IF
3160       MOVE RIGHT JUSTIFIED SUR-CNT (#I) TO #NBR-SURPLUSES-S3 (#M)
3170     END-FOR /*(2550) SURPLUS ARRAY
3180     IF #M GT 0
3190       IF #T = #V
3200         #TOT-TYPE := 'S'
3210         PERFORM TOTAL-LINE
3220       END-IF
3230       INPUT USING MAP 'RAVDMAP3'
3240     END-IF
3250   ELSE
3260     INPUT USING MAP 'RAVDMAP7'    /* NO SURPLUS MAP
3270   END-IF /*(2530) #V GT 0
3280 **
3290 /*--------------- TEXT MAP
3300   IF C*TEXT GT 0
3310     #V := C*TEXT
3320     IF #V GT 20
3330       #A := 1
3340       #T := 20
3350     ELSE
3360       #A := 1
3370       #T := #V
3380     END-IF
3390     #TEXT (#A:#T) := TEXT1 (#A:#T)
3400     INPUT USING MAP 'RAVDMAP9'
3410     IF #V GT 20
3420       RESET #TEXT (*)
3430       #A := 21
3440       #T := #V
3450       #M := 1
3460       #I := #T - 20
3470       #TEXT (#M:#I) := TEXT1 (#A:#T)
3480       INPUT USING MAP 'RAVDMAP9'
3490     END-IF
3500   END-IF
3510 END-FIND
3520 IF *NUMBER (1900) = 0
3530   INPUT USING MAP 'RAVDMAPD'
3540   FETCH 'RAV' #CLOSE-DATE-DISPLAY
3550 END-IF
3560 **
3570 **
3580 /*--------------- INFORMATION MAP
3590 * ALL THE INFORMATION ON THIS MAP IS TYPICALLY INCLUDED IN THE
3600 * USER-INPUT TEXT, SO REMOVE THE MAP.  MUKUNDA 5/20
3610 * INPUT USING MAP 'RAVDMAP4'
3620 **
3630 IF *LIBRARY-ID = 'RAPIDX' OR = 'CSSPRGPQ'
3640   FETCH 'RAVD' #CLOSE-PARS #CLOSE-DATE-DISPLAY
3650 END-IF
3660 IF *LIBRARY-ID = 'HEXAWARE'
3670   FETCH 'MUKUNDAM'
3680 END-IF
3690 **
3700 DEFINE SUBROUTINE GET-CNTS
3710 IF POSTING.C*VAC-DATA NE 0
3720   #A := POSTING.C*VAC-DATA
3730   FOR #I = 1 TO #A
3740     #TOT-VAC := #TOT-VAC + POSTING.VAC-CNT (#I)
3750     IF SUBSTRING (POSTING.VAC-CAT(#I),7,1) = 'A'
3760       #CAPT-VAC := #CAPT-VAC + POSTING.VAC-CNT (#I)
3770     ELSE
3780       #F/O-VAC := #F/O-VAC + POSTING.VAC-CNT(#I)
3790     END-IF
3800   END-FOR
3810 END-IF
3820 IF POSTING.C*SURPLUS-DATA NE 0
3830   #A := POSTING.C*SURPLUS-DATA
3840   FOR #I = 1 TO #A
3850     #TOT-SUR := #TOT-SUR + POSTING.SUR-CNT (#I)
3860     IF SUBSTRING (POSTING.SUR-CAT(#I),7,1) = 'A'
3870       #CAPT-SUR := #CAPT-SUR + POSTING.SUR-CNT (#I)
3880     END-IF
3890     IF SUBSTRING (POSTING.SUR-CAT(#I),7,1) = 'B'
3900       #F/O-SUR := #F/O-SUR + POSTING.SUR-CNT(#I)
3910     END-IF
3920   END-FOR
3930 END-IF
3940 END-SUBROUTINE
3950 **
3960 DEFINE SUBROUTINE TOTAL-LINE
3970 DECIDE ON FIRST VALUE OF #TOT-TYPE
3980   VALUE 'V'
3990     #FIXED := 'TOTAL VACANCIES:   CAPT:'
4000     #F/O := 'F/O:'
4010 *   #S/O := 'S/O:'
4020     #TOTAL := 'TOTAL SYSTEM:'
4030     MOVE RIGHT JUSTIFIED #CAPT-VAC TO #NBR-CAPT
4040     MOVE RIGHT JUSTIFIED #F/O-VAC TO #NBR-F/O
4050     MOVE RIGHT JUSTIFIED #TOT-VAC TO #V-TOTAL
4060   VALUE 'S'
4070     #FIXED := 'TOTAL SURPLUSES:   CAPT:'
4080     #F/O := 'F/O:'
4090 *   #S/O := 'S/O:'
4100     #TOTAL := 'TOTAL SYSTEM:'
4110     MOVE RIGHT JUSTIFIED #CAPT-SUR TO #NBR-CAPT
4120     MOVE RIGHT JUSTIFIED #F/O-SUR TO #NBR-F/O
4130     MOVE RIGHT JUSTIFIED #TOT-SUR TO #V-TOTAL
4140   NONE VALUE IGNORE
4150 END-DECIDE
4160 END-SUBROUTINE
4170 **
4180 DEFINE SUBROUTINE SHOW-VACANCIES
4190 IF #FIRST = ' '
4200   IF #T = #V     /* ALL VACANCIES DONE - SHOW COUNTS
4210     #TOT-TYPE := 'V'
4220     PERFORM TOTAL-LINE
4230   END-IF
4240   INPUT USING MAP 'RAVDMAP1'
4250   #FIRST := 'Y'
4260   RESET #M
4270 ELSE
4280   IF #T = #V
4290     #TOT-TYPE := 'V'
4300     PERFORM TOTAL-LINE
4310   END-IF
4320   INPUT USING MAP 'RAVDMAP2'
4330   RESET #CATEGORY-S2 (*) #VACANCIES-S2 (*) #HIGH-SENIOR-S2(*)
4340     #LOW-SENIOR-S2 (*) #REASON-S2 (*)
4350 END-IF
4360 #M := 1
4370 RESET #FIXED #F/O #TOTAL #NBR-CAPT #NBR-F/O #V-TOTAL    /* MUKUNDA 5/20
4380 END-SUBROUTINE
4390 END
***** End of List *****
